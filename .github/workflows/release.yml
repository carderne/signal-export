name: release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build:
    name: build ${{ matrix.os }} ${{ matrix.py }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: prep pysqlcipher3
        run: |
          git clone --depth=1 --branch=master https://github.com/rigglemania/pysqlcipher3.git
          cd pysqlcipher3
          mkdir amalgamation
          cp ../sqlcipher/sqlite3.[ch] amalgamation
          mkdir src/python3/sqlcipher
          cp ../sqlcipher/sqlite3.[ch] src/python3/sqlcipher
          pip install setuptools

      - name: build pysqlcipher3 linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd pysqlcipher3
          python setup.py build_amalgamation
          python setup.py build

      - name: build pysqlcipher3 macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install openssl
          export LDFLAGS="-L/opt/homebrew/opt/openssl@3/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/openssl@3/include"
          cd pysqlcipher3
          python setup.py build_amalgamation
          python setup.py build

      - name: post-build pysqlcipher3
        run: |
          mkdir src/pysqlcipher3
          for f in pysqlcipher3/build/lib.*/pysqlcipher3/*.{py,so}; do cp $f src/pysqlcipher3/; done

      - name: build
        run: |
          pip install build
          python -m build
          PLATFORM_TAG=$(python -c 'import sysconfig; print(sysconfig.get_platform().replace("-", "_").replace(".", "_"))')
          cd dist
          NEW_NAME=$(ls *.whl | sed "s/any.whl$/${PLATFORM_TAG}.whl/")
          mv *.whl $NEW_NAME
          echo "WHEEL_NAME=$(ls *.whl)" >> $GITHUB_ENV
          echo "SDIST_NAME=$(ls *.tar.gz)" >> $GITHUB_ENV

      - name: test
        run: |
          pip install dist/*.whl pytest
          pytest

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.WHEEL_NAME }}
          path: "dist/*.whl"

      - uses: actions/upload-artifact@v4
        # only do this once
        if: matrix.os == 'ubuntu-latest'
        with:
          name: ${{ env.SDIST_NAME }}
          path: "dist/*.tar.gz"

  upload:
    needs: [build]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4

    - name: Copy artifacts to dist/ folder
      run: |
        mkdir -p dist/
        find . -name '*.tar.gz' -exec mv '{}' dist/ \;
        find . -name '*.whl' -exec mv '{}' dist/ \;

    - name: Upload
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true
